name: CI - Build TIMEGPT.gs

on:
  release:
    types: [published]

jobs:
  build:
    name: Build all-in-one TIMEGPT.gs file
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3 # Updated version

      - name: Build TIMEGPT.gs
        id: build_file
        run: |
          filename=TIMEGPT.gs
          filepath=_build/$filename
          tmpfile=_build/tmp.gs
          mkdir _build
          find . -type f \( -iname "*.gs" ! -iname "config.gs" ! -iname "main.gs" ! -iname "tmp.gs" \) -exec cat > $tmpfile {} +
          cat config.gs > $filepath
          printf "\n\n/////////////////////////////////////\n\n" >> $filepath
          cat main.gs >> $filepath
          printf "\n\n/////////////////////////////////////\n\n" >> $filepath
          cat $tmpfile >> $filepath
          echo "$filename generated!"
          echo "filename=$filename" >> $GITHUB_ENV # Updated for environment file
          echo "filepath=$filepath" >> $GITHUB_ENV # Updated for environment file

      - name: Upload TIMEGPT.gs as artifact
        uses: actions/upload-artifact@v2 # Updated version
        with:
          name: ${{ steps.build_file.outputs.filename }}
          path: ${{ steps.build_file.outputs.filepath }}
      - name: Upload appsscript.json as artifact
        uses: actions/upload-artifact@v2 # Updated version
        with:
          name: appsscript.json
          path: appsscript.json

      - name: Upload TIMEGPT.gs as release asset
        id: upload_release
        uses: actions/upload-release-asset@v1.0.2 # Explicit version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ steps.build_file.outputs.filename }}
          asset_path: ${{ steps.build_file.outputs.filepath }}
          asset_content_type: application/javascript
      - name: Upload appsscript.json as release asset
        id: upload_appsscript
        uses: actions/upload-release-asset@v1.0.2 # Explicit version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: appsscript.json
          asset_path: appsscript.json
          asset_content_type: application/json
